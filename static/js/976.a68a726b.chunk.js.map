{"version":3,"file":"static/js/976.a68a726b.chunk.js","mappings":"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","sources":["components/RecipePageComponents/Hero/Hero.styled.js","components/RecipePageComponents/BtnAddToFavorite/BtnAddToFavorite.styled.js","components/RecipePageComponents/BtnAddToFavorite/BtnAddToFavorite.jsx","components/RecipePageComponents/Hero/Hero.jsx","components/RecipePageComponents/Instruction/Instruction.styled.js","components/RecipePageComponents/Video/Video.styled.js","components/RecipePageComponents/Video/Video.jsx","components/RecipePageComponents/Instruction/Instruction.jsx","components/RecipePageComponents/IngredientsItem/IngredientsItem.styled.js","components/RecipePageComponents/Checkbox/Checkbox.styled.js","components/RecipePageComponents/Checkbox/Checkbox.js","components/RecipePageComponents/IngredientsItem/IngredientsItem.jsx","components/RecipePageComponents/IngredientsList/IngredientsList.styled.js","components/RecipePageComponents/IngredientsList/IngredientsList.jsx","components/RecipePageComponents/Ingredients/Ingredients.styled.js","components/RecipePageComponents/Ingredients/Ingredients.jsx","services/getRecipeById.js","pages/RecipePage/RecipePage.jsx","redux/Favorite/selectors.js","redux/ShopingList/selectors.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import styled from 'styled-components';\nimport bgMob from 'assets/images/mobile/recipePage-hero-bg-1x.jpg';\nimport bgMobRetina from 'assets/images/mobile/recipePage-hero-bg-2x.jpg';\nimport bgTab from 'assets/images/tablet/RecipePage-hero-bg-1x.jpg';\nimport bgTabRetina from 'assets/images/tablet/RecipePage-hero-bg-2x.jpg';\nimport bgDesk from 'assets/images/desktop/recipePage-hero-bg-1x.jpg';\nimport bgDeskRetina from 'assets/images/desktop/recipePage-hero-bg-2x.jpg';\n\nimport { retina } from 'vars/styles';\n\nexport const SectionHero = styled.section`\n  min-width: 375px;\n\n  display: flex;\n\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 32px;\n\n  padding: 150px 0 90px 0;\n  text-align: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: bottom;\n  color: var(--recipe-text-color);\n\n  background-image: url(${bgMob});\n  @media ${retina} {\n    background-image: url(${bgMobRetina});\n  }\n  @media (min-width: 500px) {\n    background-image: url(${bgTab});\n    @media ${retina} {\n      background-image: url(${bgTabRetina});\n    }\n  }\n  @media (min-width: 768px) {\n    margin-bottom: 50px;\n    padding: 137px 0 32px 0;\n  }\n  @media (min-width: 1440px) {\n    padding: 164px 0 32px 0;\n    background-image: url(${bgDesk});\n    @media ${retina} {\n      background-image: url(${bgDeskRetina});\n    }\n  }\n`;\n\nexport const MainTitle = styled.h1`\n  margin-bottom: 18px;\n\n  color: var(--accent-green);\n\n  font-size: 24px;\n  font-weight: 600;\n  line-height: 1;\n  letter-spacing: -0.48px;\n\n  @media (min-width: 768px) {\n    margin-bottom: 24px;\n\n    font-size: 44px;\n    letter-spacing: -0.88px;\n  }\n`;\n\nexport const RecipeDescription = styled.p`\n  max-width: 506px;\n  margin-bottom: 24px;\n  margin-right: 0;\n\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 1.33;\n  letter-spacing: -0.24px;\n  @media (min-width: 768px) {\n    max-width: 656px;\n    margin-bottom: 24px;\n    font-size: 18px;\n    letter-spacing: -0.36px;\n  }\n  @media (min-width: 1440px) {\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 30px;\n  }\n`;\n\nexport const ContainerTimePrepare = styled.div`\n  display: flex;\n  gap: 4px;\n  align-items: center;\n  justify-content: center;\n\n  font-size: 10px;\n  font-weight: 500;\n  line-height: 1.4;\n  letter-spacing: -0.24px;\n\n  @media (min-width: 768px) {\n    font-size: 14px;\n  }\n  svg {\n    @media (min-width: 768px) {\n      width: 20px;\n      height: 20px;\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport const BtnAddFavorite = styled.button`\n  padding: 10px 18px;\n  margin-bottom: 42px;\n  transition: color var(--transition-time) var(--transition-function),\n    background-color var(--transition-time) var(--transition-function);\n\n  background: ${({ $toggler }) => ($toggler ? 'var(--accent)' : 'transparent')};\n  color: ${({ $toggler }) =>\n    $toggler ? 'var(--bg-color)' : 'var(--dark-accent)'};\n  &:hover {\n    background: ${({ $toggler }) =>\n      $toggler ? 'transparent' : 'var(--accent)'};\n    color: ${({ $toggler }) =>\n      $toggler ? 'var(--dark-accent)' : 'var(--bg-color)'};\n  }\n\n  border-radius: 24px 44px;\n  border: 1px solid var(--accent);\n\n  font-size: 10px;\n  line-height: normal;\n\n  @media (min-width: 768px) {\n    margin-bottom: 60px;\n    padding: 18px 44px;\n\n    letter-spacing: -0.36px;\n    font-size: 16px;\n  }\n  @media (min-width: 1440px) {\n    margin-bottom: 48px;\n  }\n`;\n","import {\n  addRecipeToFavorites,\n  deleteRecipeFromFavorites,\n  getAllFavoritList,\n} from 'redux/Favorite/operations';\nimport { BtnAddFavorite } from './BtnAddToFavorite.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { getAllFavorites } from 'redux/Favorite/selectors';\n\nexport default function BtnAddToFavorite({ id, recipe }) {\n  const dispatch = useDispatch();\n  const [recipesList, setRecipesList] = useState([]);\n  const favoritesList = useSelector(getAllFavorites);\n  const add = favoritesList.find(el => el._id === id);\n\n  function onClick(id) {\n    if (!add) {\n      dispatch(addRecipeToFavorites(recipe));\n    } else {\n      dispatch(deleteRecipeFromFavorites(id));\n    }\n  }\n\n  useEffect(() => {\n    if (recipesList.length === 0) {\n      dispatch(getAllFavoritList());\n      setRecipesList(favoritesList);\n    }\n    if (recipesList.length === favoritesList.length) {\n      return;\n    }\n    dispatch(getAllFavoritList());\n    setRecipesList(favoritesList);\n  }, [dispatch, favoritesList, id, recipesList.length]);\n\n  return (\n    <BtnAddFavorite\n      type=\"button\"\n      id={id}\n      onClick={() => onClick(id)}\n      $toggler={add ? true : false}\n    >\n      {add ? 'Remove from favorite recipes' : 'Add to favorite recipes'}\n    </BtnAddFavorite>\n  );\n}\n","import {\n  MainTitle,\n  ContainerTimePrepare,\n  RecipeDescription,\n  SectionHero,\n} from './Hero.styled';\nimport sprite from '../../../assets/sprite.svg';\nimport SharedContainer from 'components/SharedContainer/SharedContainer';\nimport BtnAddToFavorite from '../BtnAddToFavorite/BtnAddToFavorite';\nimport { useParams } from 'react-router-dom';\n\nexport default function RecipePageHero({ recipe }) {\n  const { recipeId } = useParams();\n  const { title, description, time } = recipe;\n\n  return (\n    <SectionHero>\n      <SharedContainer>\n        <MainTitle>{title}</MainTitle>\n        <RecipeDescription>{description}</RecipeDescription>\n        <BtnAddToFavorite type=\"button\" id={recipeId} recipe={recipe} />\n\n        <ContainerTimePrepare>\n          <svg width={14} height={14}>\n            <use href={`${sprite}#icon-clock`}></use>\n          </svg>\n          <span>{time} min</span>\n        </ContainerTimePrepare>\n      </SharedContainer>\n    </SectionHero>\n  );\n}\n","import styled from 'styled-components';\n\nexport const RecipeInstruction = styled.section`\n  max-width: 375px;\n  padding: 0 0 100px 0;\n\n  margin: 0 auto;\n\n  @media (min-width: 768px) {\n    max-width: 768px;\n    padding: 0 0 50px 0;\n  }\n  @media (min-width: 1440px) {\n    max-width: 1440px;\n    padding: 0 0 262px 0;\n\n    display: flex;\n    justify-content: space-between;\n    div {\n      max-width: 757px;\n    }\n  }\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 32px;\n  color: var(--pre-title-color);\n  font-size: 24px;\n  font-weight: 600;\n  line-height: 1;\n  letter-spacing: -0.48px;\n\n  @media (min-width: 768px) {\n    letter-spacing: -0.24px;\n    margin-bottom: 34px;\n  }\n`;\n\nexport const Instruction = styled.ol`\n  margin-bottom: 40px;\n  padding: 0;\n  counter-reset: myCounter;\n`;\n\nexport const InstructionItem = styled.li`\n  display: flex;\n  align-items: flex-start;\n  list-style: none;\n  font-size: 12px;\n  color: var(--recipe-instruction-color);\n  line-height: 1.17;\n  letter-spacing: -0.24px;\n\n  @media (min-width: 768px) {\n    font-size: 14px;\n    line-height: 1.28;\n    letter-spacing: -0.28px;\n  }\n\n  &:not(:last-child) {\n    margin-bottom: 17px;\n    @media (min-width: 768px) {\n      margin-bottom: 20px;\n    }\n    @media (min-width: 1440px) {\n      margin-bottom: 21px;\n    }\n  }\n  &:before {\n    counter-increment: myCounter;\n    content: counter(myCounter);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 7px;\n    height: 21px;\n    padding: 2px 10.5px 2px 10.5px;\n    margin-right: 14px;\n    color: var(--white);\n    font-size: 12px;\n    font-weight: 600;\n    text-align: center;\n    line-height: normal;\n    border-radius: 50%;\n    background: var(--accent);\n\n    @media (min-width: 768px) {\n      font-size: 14px;\n    }\n  }\n`;\n\nexport const ImageIngredient = styled.img`\n  object-fit: cover;\n  width: 343px;\n  height: 250px;\n  @media (min-width: 768px) {\n    width: 433px;\n    height: 332px;\n  }\n`;\n","import styled from 'styled-components';\nexport const Container = styled.div`\n  max-width: 343px;\n  min-height: 250px;\n  @media (min-width: 768px) {\n    width: 433px;\n    height: 332px;\n  }\n  @media (min-width: 1440px) {\n    width: 433px;\n    height: 332px;\n  }\n\n  div {\n    position: relative;\n    overflow: hidden;\n    padding-top: 56.25%;\n\n    border-radius: 8px;\n  }\n  iframe {\n    display: block;\n    position: absolute;\n\n    top: 0;\n    left: 0;\n\n    width: 100%;\n    height: 100%;\n  }\n`;\n","import { Container } from './Video.styled';\n\nexport default function Video({ link }) {\n  return (\n    <Container>\n      <div>\n        <iframe\n          src={`https://www.youtube.com/embed/${link}`}\n          title=\"YouTube video player\"\n          frameBorder=\"0\"\n          allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\n          allowFullScreen\n        ></iframe>\n      </div>\n    </Container>\n  );\n}\n","import { nanoid } from 'nanoid';\nimport {\n  ImageIngredient,\n  Instruction,\n  InstructionItem,\n  RecipeInstruction,\n  Title,\n} from './Instruction.styled';\nimport Video from '../Video/Video';\n\nexport default function RecipePageInstruction({ recipe }) {\n  const { instructions, preview, youtube, title } = recipe;\n\n\n  const structureTexts = instructions?.split(/\\r\\n\\r\\n|\\r\\n|\\n|\\n\\n\\n|\\n\\n\\|/g);\n  const link = youtube?.slice(32);\n\n  return (\n    <RecipeInstruction>\n      <div>\n        <Title>Recipe Preparation</Title>\n        <Instruction>\n          {structureTexts?.map(structureText => (\n            <InstructionItem key={nanoid()}>{structureText}</InstructionItem>\n          ))}\n        </Instruction>\n      </div>\n\n      {!link ? (\n        <ImageIngredient alt={title} src={preview} />\n      ) : (\n        <Video link={link} />\n      )}\n    </RecipeInstruction>\n  );\n}\n","import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n  display: flex;\n\n  width: 100%;\n  height: 86px;\n  padding: 34px 29px 34px 18px;\n\n  align-items: center;\n  justify-content: space-between;\n\n  background-color: var(--recipe-card-bg);\n  border-radius: 8px;\n\n  @media (min-width: 768px) {\n    width: 100%;\n    height: 178px;\n    padding: 71px 58px 72px 41px;\n  }\n  @media (min-width: 1440px) {\n    width: 100%;\n    height: 182px;\n    padding: 77px 70px 70px 58px;\n  }\n\n  &:not(:last-child) {\n    margin-bottom: 16px;\n    @media (min-width: 768px) {\n      margin-bottom: 24px;\n    }\n  }\n  div {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n`;\nexport const Svg = styled.svg`\n  width: 57px;\n  height: 57px;\n  margin-right: 12px;\n\n  @media (min-width: 768px) {\n    width: 112px;\n    height: 112px;\n    margin-right: 24px;\n  }\n  @media (min-width: 1440px) {\n    margin-right: 40px;\n    width: 128px;\n    height: 128px;\n  }\n`;\nexport const ImageIngredient = styled.img`\n  width: 57px;\n  height: 57px;\n  border: none;\n  margin-right: 12px;\n  @media (min-width: 768px) {\n    width: 112px;\n    height: 112px;\n    margin-right: 24px;\n  }\n  @media (min-width: 1440px) {\n    margin-right: 40px;\n    width: 128px;\n    height: 128px;\n  }\n`;\n\nexport const IngredientName = styled.span`\n  font-size: 12px;\n  font-weight: 500;\n  line-height: 1.17;\n  letter-spacing: -0.24px;\n\n  @media (min-width: 768px) {\n    font-size: 24px;\n    line-height: 1;\n    letter-spacing: -0.24px;\n  }\n`;\nexport const QuantityIngredient = styled.span`\n  min-width: 47px;\n  max-width: 100px;\n  padding: 4px 4px;\n  color: var(--bg-color);\n  text-align: center;\n  font-size: 10px;\n  font-weight: 600;\n  line-height: normal;\n  border-radius: 4px;\n  background: var(--accent);\n  margin-right: 28px;\n  @media (min-width: 768px) {\n    min-width: 68px;\n    max-width: 150px;\n    margin-right: 78px;\n    font-size: 18px;\n    padding: 4px 8px;\n  }\n  @media (min-width: 1440px) {\n    margin-right: 151px;\n  }\n`;\nexport const Label = styled.label`\n  cursor: pointer;\n  display: flex;\n\n  div {\n    display: flex;\n    position: relative;\n    &:first-child {\n      position: absolute;\n      top: 0;\n      left: 0;\n      cursor: pointer;\n    }\n\n    @media (min-width: 768px) {\n      width: 35px;\n      height: 35px;\n    }\n  }\n  &:hover div:first-child {\n    & path {\n      stroke: var(--accent);\n    }\n  }\n`;\nexport const CheckBoxInput = styled.input`\n  cursor: pointer;\n  opacity: 0;\n  position: absolute;\n  &:checked + & > div:first-child {\n    & path {\n      stroke: var(--accent);\n    }\n  }\n`;\n","import { styled } from 'styled-components';\n\nexport const CheckBoxWraper = styled.div`\n  input {\n    -webkit-appearance: none;\n    appearance: none;\n\n    width: 18px;\n    height: 18px;\n    border-radius: 4px;\n\n    border: 1px solid rgba(126, 126, 126, 0.5);\n    outline: none;\n    cursor: pointer;\n    &:hover {\n      border: 1.5px solid var(--accent);\n    }\n    @media (min-width: 768px) {\n      width: 35px;\n      height: 35px;\n    }\n\n    &:checked {\n      background-color: transparent;\n      position: relative;\n      border: 1.5px solid var(--accent);\n    }\n\n    &:checked::before {\n      content: '\\\\002714';\n      display: flex;\n      align-items: center;\n      justify-content: center;\n\n      font-size: 1em;\n      color: var(--accent);\n\n      position: absolute;\n      right: 1.5px;\n      top: 0;\n      @media (min-width: 768px) {\n        font-size: 2em;\n        right: 4px;\n      }\n\n      @media (min-width: 1449px) {\n        font-size: 1.7em;\n        top: -1px;\n      }\n    }\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { CheckBoxWraper } from './Checkbox.styled';\nimport { addIngredient, deleteIngredient } from 'redux/ShopingList/operations';\nimport { getShoppingList } from 'redux/ShopingList/selectors';\nexport default function Checkbox({ id, label, newStructure }) {\n  const dispatch = useDispatch();\n\n  const shoppingList = useSelector(getShoppingList);\n  const add = shoppingList.find(el => el.newId === id);\n\n  function onClick(id) {\n    if (!add) {\n      dispatch(addIngredient(newStructure));\n    } else {\n      dispatch(deleteIngredient(id));\n    }\n  }\n\n  return (\n    <CheckBoxWraper>\n      <label htmlFor={id}>\n        <input\n          id={id}\n          type=\"checkbox\"\n          checked={add ? true : false}\n          onChange={() => onClick(id)}\n        />\n        <span>{label}</span>\n      </label>\n    </CheckBoxWraper>\n  );\n}\n","import {\n  ImageIngredient,\n  IngredientName,\n  ListItem,\n  QuantityIngredient,\n  Svg,\n} from './IngredientsItem.styled';\nimport sprite from '../../../assets/sprite.svg';\n\nimport CheckboxLabels from '../Checkbox/Checkbox';\n\nexport default function RecipePageIngredientsItem({ ingredient }) {\n  const { name, img, measure, newId } = ingredient;\n \n\n  return (\n    <>\n      <ListItem>\n        <div>\n          {img ? (\n            <ImageIngredient alt={name} src={img} />\n          ) : (\n            <Svg width={57} height={57}>\n              <use href={`${sprite}#icon-icon-food`}></use>\n            </Svg>\n          )}\n          <IngredientName>{name}</IngredientName>\n        </div>\n        <div>\n          <QuantityIngredient>{measure}</QuantityIngredient>\n          <CheckboxLabels key={newId} id={newId} newStructure={ingredient} />\n        </div>\n      </ListItem>\n    </>\n  );\n}\n","import styled from 'styled-components';\nexport const IngredientsList = styled.ul`\n  padding: 0;\n`;\n","import { useParams } from 'react-router-dom';\nimport RecipePageIngredientsItem from '../IngredientsItem/IngredientsItem';\nimport { IngredientsList } from './IngredientsList.styled';\nexport default function RecipePageIngredientsList({ ingredients }) {\n  const { recipeId } = useParams();\n\n  return (\n    <IngredientsList>\n      {ingredients?.map(ingredient => {\n        const { measure } = ingredient;\n        const newId = ingredient.id?._id + recipeId;\n        const newStructure = {\n          ...ingredient.id,\n          measure,\n          newId: newId,\n        };\n        return (\n          <RecipePageIngredientsItem key={newId} ingredient={newStructure} />\n        );\n      })}\n    </IngredientsList>\n  );\n}\n","import styled from 'styled-components';\nexport const IngredientsListHead = styled.section`\n  padding: 0px 0 50px 0;\n  background-color: var(--bg-color);\n\n  @media (min-width: 768px) {\n    padding: 50px 0 96px 0;\n  }\n  @media (min-width: 1440px) {\n    padding: 0 0 100px 0;\n  }\n`;\nexport const NameColumn = styled.div`\n  display: flex;\n  padding: 12px 14px;\n  align-items: center;\n  width: 100%;\n  margin-bottom: 24px;\n  background-color: var(--accent-green);\n  color: var(--main-light-color);\n  font-size: 10px;\n  font-weight: 600;\n  line-height: normal;\n  letter-spacing: 0.3px;\n  border-radius: 8px;\n  @media (min-width: 768px) {\n    margin-bottom: 24px;\n\n    padding: 21px 32px;\n  }\n  @media (min-width: 1440px) {\n    margin-bottom: 50px;\n    height: 60px;\n    padding: 21px 40px;\n  }\n`;\n\nexport const Ingredients = styled.h2`\n  width: 76px;\n  font-size: 10px;\n  font-weight: 600;\n\n  line-height: normal;\n  letter-spacing: 0.3px;\n  margin-right: 122px;\n  @media (min-width: 768px) {\n    width: 115px;\n    margin-right: 312px;\n    font-size: 18px;\n    letter-spacing: 0.54;\n  }\n  @media (min-width: 1440px) {\n    width: 115px;\n    margin-right: 761px;\n  }\n`;\nexport const Quantity = styled.h2`\n  font-size: 10px;\n  font-weight: 600;\n  line-height: normal;\n  letter-spacing: 0.3px;\n  margin-right: 18px;\n  @media (min-width: 768px) {\n    margin-right: 38px;\n    font-size: 18px;\n    letter-spacing: 0.54;\n  }\n  @media (min-width: 1440px) {\n    margin-right: 109px;\n  }\n`;\n\nexport const CheckBox = styled.h2`\n  font-size: 10px;\n  font-weight: 600;\n  line-height: normal;\n  letter-spacing: 0.3px;\n  @media (min-width: 768px) {\n    font-size: 18px;\n    letter-spacing: 0.54;\n  }\n`;\n","import RecipePageIngredientsList from '../IngredientsList/IngredientsList';\nimport {\n  CheckBox,\n  Ingredients,\n  IngredientsListHead,\n  NameColumn,\n  Quantity,\n} from './Ingredients.styled';\n\nexport default function RecipePageIngredients({ ingredients }) {\n  return (\n    <IngredientsListHead>\n      <NameColumn>\n        <Ingredients>Ingredients</Ingredients>\n        <Quantity>Number</Quantity>\n        <CheckBox>Add to list</CheckBox>\n      </NameColumn>\n      <RecipePageIngredientsList ingredients={ingredients} />\n    </IngredientsListHead>\n  );\n}\n","import axios from 'axios';\n\nconst getRecipeById = async id => {\n  try {\n    const { data } = await axios.get(`recipes/${id}`);\n    return data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport default getRecipeById;\n","import { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport RecipePageHero from 'components/RecipePageComponents/Hero/Hero';\nimport RecipePageInstruction from 'components/RecipePageComponents/Instruction/Instruction';\nimport SharedContainer from 'components/SharedContainer/SharedContainer';\nimport RecipePageIngredients from 'components/RecipePageComponents/Ingredients/Ingredients';\nimport getRecipeById from 'services/getRecipeById';\nimport { getAllShoppingList } from 'redux/ShopingList/operations';\nimport { useDispatch } from 'react-redux';\n\nexport default function RecipePage() {\n  const { recipeId } = useParams();\n  const [recipe, setRecipe] = useState('');\n  const dispatch = useDispatch()\n  const navigate = useNavigate();\n  useEffect(() => {\n    dispatch(getAllShoppingList())\n    getRecipeById(recipeId)\n      .then(data => {\n        if (data) {\n          setRecipe(data);\n        } else {\n          setRecipe('');\n          navigate('/notFound');\n        }\n      })\n      .catch(err => console.log(err.message));\n  }, [recipeId, navigate, dispatch]);\n\n  return (\n    <>\n      <RecipePageHero recipe={recipe} />\n      <SharedContainer>\n        <RecipePageIngredients ingredients={recipe.ingredients} />\n        <RecipePageInstruction recipe={recipe} />\n      </SharedContainer>\n    </>\n  );\n}\n","export const getAllFavorites = state => state.favorite.recipeList;","export const getShoppingList = state => state.shoppingList.ingredients;\nexport const isLoading = state => state.shoppingList.isLoading;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["SectionHero","styled","_templateObject","_taggedTemplateLiteral","bgMob","retina","bgMobRetina","bgTab","bgTabRetina","bgDesk","bgDeskRetina","MainTitle","_templateObject2","RecipeDescription","_templateObject3","ContainerTimePrepare","_templateObject4","BtnAddFavorite","_ref","$toggler","_ref2","_ref3","_ref4","BtnAddToFavorite","id","recipe","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","recipesList","setRecipesList","favoritesList","useSelector","getAllFavorites","add","find","el","_id","useEffect","length","getAllFavoritList","_jsx","type","onClick","deleteRecipeFromFavorites","addRecipeToFavorites","children","RecipePageHero","recipeId","useParams","title","description","time","_jsxs","SharedContainer","width","height","href","concat","sprite","RecipeInstruction","Title","Instruction","InstructionItem","ImageIngredient","_templateObject5","Container","Video","link","src","frameBorder","allow","allowFullScreen","RecipePageInstruction","instructions","preview","youtube","structureTexts","split","slice","map","structureText","nanoid","alt","ListItem","Svg","IngredientName","QuantityIngredient","CheckBoxWraper","_templateObject6","_templateObject7","Checkbox","label","newStructure","getShoppingList","newId","htmlFor","checked","onChange","deleteIngredient","addIngredient","RecipePageIngredientsItem","ingredient","name","img","measure","_Fragment","CheckboxLabels","IngredientsList","RecipePageIngredientsList","ingredients","_ingredient$id","_objectSpread","IngredientsListHead","NameColumn","Ingredients","Quantity","CheckBox","RecipePageIngredients","getRecipeById","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$get","data","wrap","_context","prev","next","axios","sent","abrupt","t0","console","log","message","stop","_x","apply","arguments","RecipePage","setRecipe","navigate","useNavigate","getAllShoppingList","then","catch","err","state","favorite","recipeList","shoppingList","size","undefined","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}