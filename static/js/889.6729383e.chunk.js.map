{"version":3,"file":"static/js/889.6729383e.chunk.js","mappings":"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","sources":["components/RecipePageComponents/Hero/Hero.styled.js","components/RecipePageComponents/BtnAddToFavorite/BtnAddToFavorite.styled.js","components/RecipePageComponents/BtnAddToFavorite/BtnAddToFavorite.jsx","components/RecipePageComponents/Hero/Hero.jsx","../node_modules/nanoid/index.browser.js","components/RecipePageComponents/Instruction/Instruction.styled.js","components/RecipePageComponents/Video/Video.styled.js","components/RecipePageComponents/Video/Video.jsx","components/RecipePageComponents/Instruction/Instruction.jsx","components/RecipePageComponents/IngredientsItem/IngredientsItem.styled.js","components/RecipePageComponents/Checkbox/Checkbox.styled.js","components/RecipePageComponents/Checkbox/Checkbox.js","components/RecipePageComponents/IngredientsItem/IngredientsItem.jsx","components/RecipePageComponents/IngredientsList/IngredientsList.styled.js","components/RecipePageComponents/IngredientsList/IngredientsList.jsx","components/RecipePageComponents/Ingredients/Ingredients.styled.js","components/RecipePageComponents/Ingredients/Ingredients.jsx","services/getRecipeById.js","pages/RecipePage/RecipePage.jsx","redux/Favorite/selectors.js","redux/ShopingList/selectors.js"],"sourcesContent":["import styled from 'styled-components';\nimport bgMob from 'assets/images/mobile/recipePage-hero-bg-1x.jpg';\nimport bgMobRetina from 'assets/images/mobile/recipePage-hero-bg-2x.jpg';\nimport bgTab from 'assets/images/tablet/RecipePage-hero-bg-1x.jpg';\nimport bgTabRetina from 'assets/images/tablet/RecipePage-hero-bg-2x.jpg';\nimport bgDesk from 'assets/images/desktop/recipePage-hero-bg-1x.jpg';\nimport bgDeskRetina from 'assets/images/desktop/recipePage-hero-bg-2x.jpg';\n\nimport { retina } from 'vars/styles';\n\nexport const SectionHero = styled.section`\n  min-width: 375px;\n\n  display: flex;\n\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 32px;\n\n  padding: 150px 0 90px 0;\n  text-align: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: bottom;\n\n  background-image: url(${bgMob});\n  @media ${retina} {\n    background-image: url(${bgMobRetina});\n  }\n  @media (min-width: 500px) {\n    background-image: url(${bgTab});\n    @media ${retina} {\n      background-image: url(${bgTabRetina});\n    }\n  }\n  @media (min-width: 768px) {\n    margin-bottom: 50px;\n    padding: 137px 0 32px 0;\n  }\n  @media (min-width: 1440px) {\n    padding: 164px 0 32px 0;\n    background-image: url(${bgDesk});\n    @media ${retina} {\n      background-image: url(${bgDeskRetina});\n    }\n  }\n`;\n\nexport const MainTitle = styled.h1`\n  margin-bottom: 18px;\n\n  color: var(--accent);\n\n  font-size: 24px;\n  font-weight: 600;\n  line-height: 1;\n  letter-spacing: -0.48px;\n\n  @media (min-width: 768px) {\n    margin-bottom: 24px;\n\n    font-size: 44px;\n    letter-spacing: -0.88px;\n  }\n`;\n\nexport const RecipeDescription = styled.p`\n  max-width: 506px;\n  margin-bottom: 24px;\n  margin-right: 0;\n\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 1.33;\n  letter-spacing: -0.24px;\n  @media (min-width: 768px) {\n    max-width: 656px;\n    margin-bottom: 24px;\n    font-size: 18px;\n    letter-spacing: -0.36px;\n  }\n  @media (min-width: 1440px) {\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 30px;\n  }\n`;\n\nexport const ContainerTimePrepare = styled.div`\n  display: flex;\n  gap: 4px;\n  align-items: center;\n  justify-content: center;\n\n  font-size: 10px;\n  font-weight: 500;\n  line-height: 1.4;\n  letter-spacing: -0.24px;\n\n  @media (min-width: 768px) {\n    font-size: 14px;\n  }\n  svg {\n    @media (min-width: 768px) {\n      width: 20px;\n      height: 20px;\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport const BtnAddFavorite = styled.button`\n  width: 150px;\n  height: 35px;\n  margin-bottom: 42px;\n\n  background: ${props =>\n    props.isAddedToFavorite ? 'var(--accent)' : 'transparent'};\n  color: ${props =>\n    props.isAddedToFavorite ? 'var(--bg-color)' : 'var(--dark-accent)'};\n\n  border-radius: 24px 44px;\n  border: 1px solid var(--accent);\n\n  font-size: 10px;\n  line-height: normal;\n\n  @media (min-width: 768px) {\n    margin-bottom: 60px;\n    width: 278px;\n    height: 59px;\n\n    letter-spacing: -0.36px;\n    font-size: 16px;\n  }\n  @media (min-width: 1440px) {\n    margin-bottom: 48px;\n  }\n`;\n","import { BtnAddFavorite } from './BtnAddToFavorite.styled';\n\nexport default function BtnAddToFavorite({ isAddedToFavorite, id, onClick }) {\n  return (\n    <BtnAddFavorite\n      type=\"button\"\n      id={id}\n      onClick={onClick}\n      $isAddedToFavorite={isAddedToFavorite}\n    >\n      {isAddedToFavorite\n        ? 'Remove from favorite recipes'\n        : 'Add to favorite recipes'}\n    </BtnAddFavorite>\n  );\n}\n","import {\n  MainTitle,\n  ContainerTimePrepare,\n  RecipeDescription,\n  SectionHero,\n} from './Hero.styled';\nimport sprite from '../../../assets/sprite.svg';\nimport SharedContainer from 'components/SharedContainer/SharedContainer';\nimport { useEffect, useState } from 'react';\nimport BtnAddToFavorite from '../BtnAddToFavorite/BtnAddToFavorite';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllFavorites } from 'redux/Favorite/selectors';\nimport {\n  addRecipeToFavorites,\n  deleteRecipeFromFavorites,\n} from 'redux/Favorite/operations';\nimport { useParams } from 'react-router-dom';\n\nexport default function RecipePageHero({ recipe }) {\n  const { recipeId } = useParams();\n  const { title, description, time } = recipe;\n  const dispatch = useDispatch();\n  const [isAddedToFavorite, setIsAddedToFavorite] = useState(false);\n  const favoritesList = useSelector(getAllFavorites);\n\n  const onHandleClick = () => {\n    if (isAddedToFavorite) {\n      dispatch(deleteRecipeFromFavorites(recipeId));\n      setIsAddedToFavorite(prev => !prev);\n    } else {\n      dispatch(addRecipeToFavorites(recipe));\n      setIsAddedToFavorite(prev => !prev);\n    }\n  };\n\n  useEffect(() => {\n    setIsAddedToFavorite(\n      favoritesList?.find(el => el._id === recipeId) ? true : false\n    );\n  }, [favoritesList, recipeId]);\n\n  return (\n    <SectionHero>\n      <SharedContainer>\n        <MainTitle>{title}</MainTitle>\n        <RecipeDescription>{description}</RecipeDescription>\n        <BtnAddToFavorite\n          type=\"button\"\n          onClick={onHandleClick}\n          id={recipeId}\n          isAddedToFavorite={isAddedToFavorite}\n        />\n\n        <ContainerTimePrepare>\n          <svg width={14} height={14}>\n            <use href={`${sprite}#icon-clock`}></use>\n          </svg>\n          <span>{time} min</span>\n        </ContainerTimePrepare>\n      </SharedContainer>\n    </SectionHero>\n  );\n}\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import styled from 'styled-components';\nexport const RecipeInstruction = styled.section`\n  max-width: 375px;\n  padding: 0 0 100px 0;\n\n  margin: 0 auto;\n\n  @media (min-width: 768px) {\n    max-width: 768px;\n    padding: 0 0 50px 0;\n  }\n  @media (min-width: 1440px) {\n    max-width: 1440px;\n    padding: 0 0 262px 0;\n\n    display: flex;\n    gap: 50px;\n    div {\n      max-width: 757px;\n    }\n  }\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 32px;\n  color: var(--pre-title-color);\n  font-size: 24px;\n  font-weight: 600;\n  line-height: 1;\n  letter-spacing: -0.48px;\n\n  @media (min-width: 768px) {\n    letter-spacing: -0.24px;\n    margin-bottom: 34px;\n  }\n`;\n\nexport const Instruction = styled.ol`\n  margin-bottom: 40px;\n  padding: 0;\n  counter-reset: myCounter;\n`;\n\nexport const InstructionItem = styled.li`\n  display: flex;\n  align-items: flex-start;\n  list-style: none;\n  font-size: 12px;\n  color: rgba(0, 0, 0, 0.8);\n  line-height: 1.17;\n  letter-spacing: -0.24px;\n\n  @media (min-width: 768px) {\n    font-size: 14px;\n    line-height: 1.28;\n    letter-spacing: -0.28px;\n  }\n\n  &:not(:last-child) {\n    margin-bottom: 17px;\n    @media (min-width: 768px) {\n      margin-bottom: 20px;\n    }\n    @media (min-width: 1440px) {\n      margin-bottom: 21px;\n    }\n  }\n  &:before {\n    counter-increment: myCounter;\n    content: counter(myCounter);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 7px;\n    height: 21px;\n    padding: 2px 10.5px 2px 10.5px;\n    margin-right: 14px;\n    color: var(--white);\n    font-size: 12px;\n    font-weight: 600;\n    text-align: center;\n    line-height: normal;\n    border-radius: 50%;\n    background: var(--accent);\n\n    @media (min-width: 768px) {\n      font-size: 14px;\n    }\n  }\n`;\n","import styled from 'styled-components';\nexport const Container = styled.div`\n  max-width: 343px;\n  min-height: 250px;\n  @media (min-width: 768px) {\n    width: 433px;\n    height: 332px;\n  }\n  @media (min-width: 1440px) {\n    width: 433px;\n    height: 332px;\n  }\n\n  div {\n    position: relative;\n    overflow: hidden;\n    padding-top: 56.25%;\n\n    border-radius: 8px;\n  }\n  iframe {\n    display: block;\n    position: absolute;\n\n    top: 0;\n    left: 0;\n\n    width: 100%;\n    height: 100%;\n  }\n`;\n","import { Container } from './Video.styled';\n\nexport default function Video({ link }) {\n  return (\n    <Container>\n      <div>\n        <iframe\n          src={`https://www.youtube.com/embed/${link}`}\n          title=\"YouTube video player\"\n          frameBorder=\"0\"\n          allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\n          allowFullScreen\n        ></iframe>\n      </div>\n    </Container>\n  );\n}\n","import { nanoid } from 'nanoid';\nimport {\n  Instruction,\n  InstructionItem,\n  RecipeInstruction,\n  Title,\n} from './Instruction.styled';\nimport Video from '../Video/Video';\n\nexport default function RecipePageInstruction({ recipe }) {\n  const { instructions, youtube } = recipe;\n\n  const structureTexts = instructions?.split(/\\r\\n\\r\\n|\\r\\n|\\n/g);\n  const link = youtube?.slice(32);\n\n  return (\n    <RecipeInstruction>\n      <div>\n        <Title>Recipe Preparation</Title>\n        <Instruction>\n          {structureTexts?.map(structureText => (\n            <InstructionItem key={nanoid()}>{structureText}</InstructionItem>\n          ))}\n        </Instruction>\n      </div>\n      <Video link={link} />\n    </RecipeInstruction>\n  );\n}\n","import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n  display: flex;\n\n  width: 100%;\n  height: 86px;\n  padding: 34px 29px 34px 18px;\n\n  align-items: center;\n  justify-content: space-between;\n\n  background-color: var(--light-green-bg);\n  border-radius: 8px;\n\n  @media (min-width: 768px) {\n    width: 100%;\n    height: 178px;\n    padding: 71px 58px 72px 41px;\n  }\n  @media (min-width: 1440px) {\n    width: 100%;\n    height: 182px;\n    padding: 77px 70px 70px 58px;\n  }\n\n  &:not(:last-child) {\n    margin-bottom: 16px;\n    @media (min-width: 768px) {\n      margin-bottom: 24px;\n    }\n  }\n  div {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nexport const ImageIngredient = styled.img`\n  width: 57px;\n  height: 57px;\n  border: none;\n  margin-right: 12px;\n  @media (min-width: 768px) {\n    width: 112px;\n    height: 112px;\n    margin-right: 24px;\n  }\n  @media (min-width: 1440px) {\n    margin-right: 40px;\n    width: 128px;\n    height: 128px;\n  }\n`;\n\nexport const IngredientName = styled.span`\n  font-size: 12px;\n  font-weight: 500;\n  line-height: 1.17;\n  letter-spacing: -0.24px;\n\n  @media (min-width: 768px) {\n    font-size: 24px;\n    line-height: 1;\n    letter-spacing: -0.24px;\n  }\n`;\nexport const QuantityIngredient = styled.span`\n  min-width: 47px;\n  max-width: 100px;\n  padding: 4px 4px;\n  color: var(--bg-color);\n  text-align: center;\n  font-size: 10px;\n  font-weight: 600;\n  line-height: normal;\n  border-radius: 4px;\n  background: var(--accent);\n  margin-right: 28px;\n  @media (min-width: 768px) {\n    min-width: 68px;\n    max-width: 150px;\n    margin-right: 78px;\n    font-size: 18px;\n    padding: 4px 8px;\n  }\n  @media (min-width: 1440px) {\n    margin-right: 151px;\n  }\n`;\nexport const Label = styled.label`\n  cursor: pointer;\n  display: flex;\n\n  div {\n    display: flex;\n    position: relative;\n    &:first-child {\n      position: absolute;\n      top: 0;\n      left: 0;\n      cursor: pointer;\n    }\n\n    @media (min-width: 768px) {\n      width: 35px;\n      height: 35px;\n    }\n  }\n  &:hover div:first-child {\n    & path {\n      stroke: var(--accent);\n    }\n  }\n`;\nexport const CheckBoxInput = styled.input`\n  cursor: pointer;\n  opacity: 0;\n  position: absolute;\n  &:checked + & > div:first-child {\n    & path {\n      stroke: var(--accent);\n    }\n  }\n`;\n","import { styled } from 'styled-components';\n\nexport const CheckBoxWraper = styled.div`\n  input {\n    -webkit-appearance: none;\n    appearance: none;\n\n    width: 18px;\n    height: 18px;\n    border-radius: 4px;\n\n    border: 1px solid rgba(126, 126, 126, 0.5);\n    outline: none;\n    cursor: pointer;\n    &:hover {\n      border: 1.5px solid var(--accent);\n    }\n    @media (min-width: 768px) {\n      width: 35px;\n      height: 35px;\n    }\n\n    &:checked {\n      background-color: transparent;\n      position: relative;\n      border: 1.5px solid var(--accent);\n    }\n\n    &:checked::before {\n      content: '\\\\002714';\n      display: flex;\n      align-items: center;\n      justify-content: center;\n\n      font-size: 1em;\n      color: var(--accent);\n\n      position: absolute;\n      right: 1.5px;\n      top: 0;\n      @media (min-width: 768px) {\n        font-size: 2em;\n        right: 4px;\n      }\n\n      @media (min-width: 1449px) {\n        font-size: 1.7em;\n        top: -1px;\n      }\n    }\n  }\n`;\n","import { CheckBoxWraper } from './Checkbox.styled';\nexport default function Checkbox({ id, label, onClick, isChecked }) {\n  return (\n    <CheckBoxWraper>\n      <label htmlFor={id}>\n        <input id={id} type=\"checkbox\" checked={isChecked} onChange={onClick} />\n        <span>{label}</span>\n      </label>\n    </CheckBoxWraper>\n  );\n}\n","import {\n  ImageIngredient,\n  IngredientName,\n  ListItem,\n  QuantityIngredient,\n} from './IngredientsItem.styled';\n\nimport CheckboxLabels from '../Checkbox/Checkbox';\nimport { addIngredient, deleteIngredient } from 'redux/ShopingList/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getShoppingList } from 'redux/ShopingList/selectors';\n\nexport default function RecipePageIngredientsItem({ ingredient }) {\n  const { recipeId } = useParams();\n  const [isChecked, setIsChecked] = useState(false);\n  const dispatch = useDispatch();\n  const shoppingList = useSelector(getShoppingList);\n  const { id, measure } = ingredient;\n  const newId = (id._id + recipeId).slice(12, 36);\n\n  const newStructure = {\n    ...ingredient.id,\n    measure,\n    newId: newId,\n  };\n\n  const handleCheckboxClick = () => {\n    setIsChecked(prev => !prev);\n    isChecked\n      ? dispatch(deleteIngredient(newId))\n      : dispatch(addIngredient(newStructure));\n  };\n\n  useEffect(() => {\n    setIsChecked(\n      shoppingList.find(el => el.newId === newStructure.newId) ? true : false\n    );\n  }, [newStructure.newId, shoppingList]);\n\n  return (\n    <>\n      <ListItem>\n        <div>\n          <ImageIngredient alt={id.name} src={id.img} />\n          <IngredientName>{id.name}</IngredientName>\n        </div>\n        <div>\n          <QuantityIngredient>{measure}</QuantityIngredient>\n          <CheckboxLabels\n            key={newId}\n            id={newId}\n            onClick={handleCheckboxClick}\n            isChecked={isChecked}\n          />\n        </div>\n      </ListItem>\n    </>\n  );\n}\n","import styled from 'styled-components';\nexport const IngredientsList = styled.ul`\n  padding: 0;\n`;\n","import RecipePageIngredientsItem from '../IngredientsItem/IngredientsItem';\nimport { IngredientsList } from './IngredientsList.styled';\nexport default function RecipePageIngredientsList({ ingredients, id }) {\n  return (\n    <IngredientsList>\n      {ingredients?.map(ingredient => (\n        <RecipePageIngredientsItem\n          key={ingredient.id._id}\n          ingredient={ingredient}\n          idRecipe={id}\n        />\n      ))}\n    </IngredientsList>\n  );\n}\n","import styled from 'styled-components';\nexport const IngredientsListHead = styled.section`\n  padding: 0px 0 50px 0;\n  background-color: var(--bg-color);\n\n  @media (min-width: 768px) {\n    padding: 50px 0 96px 0;\n  }\n  @media (min-width: 1440px) {\n    padding: 0 0 100px 0;\n  }\n`;\nexport const NameColumn = styled.div`\n  display: flex;\n  padding: 12px 14px;\n  align-items: center;\n  width: 100%;\n  margin-bottom: 24px;\n  background-color: var(--accent);\n  color: var(--bg-color);\n  font-size: 10px;\n  font-weight: 600;\n  line-height: normal;\n  letter-spacing: 0.3px;\n  border-radius: 8px;\n  @media (min-width: 768px) {\n    margin-bottom: 24px;\n\n    padding: 21px 32px;\n  }\n  @media (min-width: 1440px) {\n    margin-bottom: 50px;\n    height: 60px;\n    padding: 21px 40px;\n  }\n`;\n\nexport const Ingredients = styled.h2`\n  width: 76px;\n  font-size: 10px;\n  font-weight: 600;\n\n  line-height: normal;\n  letter-spacing: 0.3px;\n  margin-right: 122px;\n  @media (min-width: 768px) {\n    width: 115px;\n    margin-right: 312px;\n    font-size: 18px;\n    letter-spacing: 0.54;\n  }\n  @media (min-width: 1440px) {\n    width: 115px;\n    margin-right: 761px;\n  }\n`;\nexport const Quantity = styled.h2`\n  font-size: 10px;\n  font-weight: 600;\n  line-height: normal;\n  letter-spacing: 0.3px;\n  margin-right: 18px;\n  @media (min-width: 768px) {\n    margin-right: 38px;\n    font-size: 18px;\n    letter-spacing: 0.54;\n  }\n  @media (min-width: 1440px) {\n    margin-right: 109px;\n  }\n`;\n\nexport const CheckBox = styled.h2`\n  font-size: 10px;\n  font-weight: 600;\n  line-height: normal;\n  letter-spacing: 0.3px;\n  @media (min-width: 768px) {\n    font-size: 18px;\n    letter-spacing: 0.54;\n  }\n`;\n","import RecipePageIngredientsList from '../IngredientsList/IngredientsList';\nimport {\n  CheckBox,\n  Ingredients,\n  IngredientsListHead,\n  NameColumn,\n  Quantity,\n} from './Ingredients.styled';\n\nexport default function RecipePageIngredients({ ingredients }) {\n  return (\n    <IngredientsListHead>\n      <NameColumn>\n        <Ingredients>Ingredients</Ingredients>\n        <Quantity>Number</Quantity>\n        <CheckBox>Add to list</CheckBox>\n      </NameColumn>\n      <RecipePageIngredientsList ingredients={ingredients} />\n    </IngredientsListHead>\n  );\n}\n","import axios from 'axios';\n\n// axios.defaults.baseURL = 'https://so-yummy-backend-hg4e.onrender.com/api/';\n\n// const token = {\n//   set(token) {\n//     axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n//   },\n//   unset() {\n//     axios.defaults.headers.common.Authorization = '';\n//   },\n// };\n\nconst getRecipeById = async id => {\n  // const storage = localStorage.getItem('persist:auth');\n  // const parsedStorage = JSON.parse(storage);\n  // const persistToken = parsedStorage.token.replace(/\"/g, '');\n\n  // if (parsedStorage.token === null) {\n  //   return console.log('No token');\n  // }\n\n  // token.set(persistToken);\n\n  try {\n    const { data } = await axios.get(`recipes/${id}`);\n    return data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport default getRecipeById;\n","import { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport RecipePageHero from 'components/RecipePageComponents/Hero/Hero';\nimport RecipePageInstruction from 'components/RecipePageComponents/Instruction/Instruction';\nimport SharedContainer from 'components/SharedContainer/SharedContainer';\nimport RecipePageIngredients from 'components/RecipePageComponents/Ingredients/Ingredients';\nimport getRecipeById from 'services/getRecipeById';\n\nexport default function RecipePage() {\n  const { recipeId } = useParams();\n  const [recipe, setRecipe] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    getRecipeById(recipeId)\n      .then(data => {\n        if (data) {\n          setRecipe(data);\n        } else {\n          setRecipe('');\n          navigate('/notFound');\n        }\n      })\n      .catch(err => console.log(err.message));\n  }, [recipeId, navigate]);\n\n  return (\n    <>\n      <RecipePageHero recipe={recipe} />\n      <SharedContainer>\n        <RecipePageIngredients ingredients={recipe.ingredients} id={recipeId} />\n        <RecipePageInstruction recipe={recipe} />\n      </SharedContainer>\n    </>\n  );\n}\n","export const getAllFavorites = state => state.favorite.recipeList;\n","export const getShoppingList = state => state.shoppingList.ingredients;\n"],"names":["SectionHero","styled","_templateObject","_taggedTemplateLiteral","bgMob","retina","bgMobRetina","bgTab","bgTabRetina","bgDesk","bgDeskRetina","MainTitle","_templateObject2","RecipeDescription","_templateObject3","ContainerTimePrepare","_templateObject4","BtnAddFavorite","props","isAddedToFavorite","BtnAddToFavorite","_ref","id","onClick","_jsx","type","$isAddedToFavorite","children","RecipePageHero","recipe","recipeId","useParams","title","description","time","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","setIsAddedToFavorite","favoritesList","useSelector","getAllFavorites","useEffect","find","el","_id","_jsxs","SharedContainer","deleteRecipeFromFavorites","prev","addRecipeToFavorites","width","height","href","concat","sprite","RecipeInstruction","Title","Instruction","InstructionItem","Container","Video","link","src","frameBorder","allow","allowFullScreen","RecipePageInstruction","instructions","youtube","structureTexts","split","slice","map","structureText","size","arguments","length","undefined","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","nanoid","ListItem","ImageIngredient","IngredientName","QuantityIngredient","CheckBoxWraper","_templateObject5","_templateObject6","Checkbox","label","isChecked","htmlFor","checked","onChange","RecipePageIngredientsItem","ingredient","setIsChecked","shoppingList","getShoppingList","measure","newId","newStructure","_objectSpread","_Fragment","alt","name","img","CheckboxLabels","deleteIngredient","addIngredient","IngredientsList","RecipePageIngredientsList","ingredients","idRecipe","IngredientsListHead","NameColumn","Ingredients","Quantity","CheckBox","RecipePageIngredients","getRecipeById","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$get","data","wrap","_context","next","axios","sent","abrupt","t0","console","log","message","stop","_x","apply","RecipePage","setRecipe","navigate","useNavigate","then","catch","err","state","favorite","recipeList"],"sourceRoot":""}