{"version":3,"file":"static/js/985.f6d7457e.chunk.js","mappings":"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","sources":["components/MainTitle/MainTitle.styled.js","components/MainTitle/MainTitle.jsx","components/Select/Select.styled.js","components/Select/Select.jsx","components/RecipeDescriptionFields/RecipeDescriptionFields.jsx","components/RecipeDescriptionFields/RecipeDescriptionFields.styled.js","components/SelectInput/SelectInput.styled.js","components/SelectInput/SelectInput.jsx","components/SectionTitle/SectionTitle.styled.js","components/SectionTitle/SectionTitle.jsx","components/InputNumber/InputNumber.jsx","components/RecipeIngredientsFields/RecipeIngredientsFields.styled.js","components/RecipeIngredientsFields/RecipeIngredientsFields.jsx","components/RecipePreparationFields/RecipePreparationFields.styled.js","components/RecipePreparationFields/RecipePreparationFields.jsx","components/Button/Button.styled.js","components/Button/Button.jsx","components/AddRecipeForm/AddRecipeForm.styled.js","components/AddRecipeForm/AddRecipeForm.jsx","components/FollowUs/FollowUs.styled.js","components/FollowUs/FollowUs.jsx","components/PopularRecipe/PopularRecipe.styled.js","components/PopularRecipe/PopularRecipe.jsx","pages/AddRecipePage/AddRecipePage.styled.js","pages/AddRecipePage/AddRecipePage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  color: var(--title-color);\n  font-size: 28px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 28px;\n  letter-spacing: -0.56px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 32px;\n    line-height: 1;\n    letter-spacing: -0.64px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    font-size: 44px;\n    letter-spacing: -0.88px;\n  }\n`;\n","import { Title } from './MainTitle.styled';\n\nexport default function MainTitle({ children, ...otherProps }) {\n  return <Title {...otherProps}>{children}</Title>;\n}\n","import styled from 'styled-components';\nimport SimpleBar from 'simplebar-react';\n\nexport const Wrapper = styled.div`\n  position: relative;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n\n  border: none;\n  outline: none;\n  background-color: transparent;\n\n  span {\n    transition: color var(--transition-time) var(--transition-function);\n  }\n\n  svg {\n    margin-left: 8px;\n    stroke: var(--accent);\n    transition: stroke var(--transition-time) var(--transition-function);\n  }\n\n  &:hover,\n  &:focus {\n    span {\n      color: var(--accent);\n    }\n  }\n`;\n\nexport const ButtonText = styled.span`\n  color: var(--black);\n  font-size: 12px;\n  font-style: normal;\n  line-height: 12px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n  }\n`;\n\nexport const ListWrapper = styled.div`\n  position: absolute;\n  top: calc(100% + 4px);\n  right: 0;\n  z-index: 10;\n\n  display: ${({ $isOpen }) => ($isOpen ? 'block' : 'none')};\n\n  background-color: var(--white);\n  border-radius: 6px;\n  box-shadow: 0px 6.518518447875977px 7.8222222328186035px 0px\n    rgba(0, 0, 0, 0.03);\n\n  @media screen and (min-width: 768px) {\n    top: calc(100% + 10px);\n  }\n`;\n\nexport const List = styled.ul`\n  margin: 0;\n  padding: 4px 14px;\n  min-width: 100%;\n  width: max-content;\n\n  @media screen and (min-width: 768px) {\n    padding: 8px 18px;\n  }\n`;\n\nexport const Option = styled.li`\n  padding: 4px 0;\n\n  color: var(--black);\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  letter-spacing: -0.24px;\n  opacity: 0.5;\n  transition: color var(--transition-time) var(--transition-function);\n  cursor: pointer;\n\n  &:hover {\n    color: var(--accent);\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n  }\n`;\n\nexport const ScrollBar = styled(SimpleBar)`\n  min-width: 100%;\n  width: max-content;\n  max-height: 144px;\n\n  .simplebar-scrollbar::before {\n    background-color: var(--scroll-bar-color);\n    width: 4px;\n  }\n  .simplebar-scrollbar.simplebar-visible::before {\n    opacity: 1;\n  }\n\n  @media screen and (min-width: 768px) {\n    max-height: 162px;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Wrapper,\n  Button,\n  ButtonText,\n  ListWrapper,\n  List,\n  Option,\n  ScrollBar,\n} from './Select.styled';\nimport Sprite from 'assets/sprite.svg';\nimport 'simplebar-react/dist/simplebar.min.css';\n\nexport default function Select({ options, currentOption, onSelect }) {\n  const [isOpen, setIsOpen] = useState(false);\n\n  useEffect(() => {\n    if (!isOpen) {\n      return;\n    }\n\n    const handleNextClick = () => {\n      setIsOpen(false);\n      document.removeEventListener('click', handleNextClick);\n    };\n\n    setTimeout(() => {\n      document.addEventListener('click', handleNextClick);\n    }, 0);\n  }, [isOpen]);\n\n  const handleSelect = value => {\n    onSelect(value);\n  };\n\n  return (\n    <Wrapper>\n      <Button type=\"button\" onClick={() => setIsOpen(state => !state)}>\n        <ButtonText>{currentOption ? currentOption : 'Select...'}</ButtonText>\n        <svg width={20} height={20}>\n          <use href={Sprite + '#icon-down'}></use>\n        </svg>\n      </Button>\n\n      <ListWrapper $isOpen={isOpen}>\n        <ScrollBar>\n          <List>\n            {options.map(({ label, value }) => (\n              <Option key={value} onClick={() => handleSelect(value)}>\n                {label}\n              </Option>\n            ))}\n          </List>\n        </ScrollBar>\n      </ListWrapper>\n    </Wrapper>\n  );\n}\n\nSelect.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.object),\n  currentOption: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  onSelect: PropTypes.func,\n};\n\nSelect.defaultProps = {\n  options: [],\n  currentOption: '',\n  onSelect: () => null,\n};\n","import { useEffect, useMemo, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Select from 'components/Select/Select';\nimport {\n  Wrapper,\n  FileWrapper,\n  Container,\n  Label,\n  Row,\n  Input,\n  Text,\n  Preview,\n} from './RecipeDescriptionFields.styled.js';\nimport Sprite from 'assets/sprite.svg';\n\nimport categoriesData from 'data/categories.json';\n\nconst periods = [];\nfor (let i = 5; i <= 120; i += 5) {\n  periods.push({ value: i + ' min', label: i + ' min' });\n}\n\nexport default function RecipeDescriptionFields({\n  description,\n  setFieldValue,\n}) {\n  const [categories, setCategories] = useState([]);\n  const [imgUrl, setImgUrl] = useState('');\n\n  useEffect(() => {\n    setCategories(categoriesData);\n  }, []);\n\n  const handleFileChange = ({ target }) => {\n    const file = target.files[0];\n\n    if (typeof file === 'object') {\n      setFieldValue('description.img', file);\n      setImgUrl(URL.createObjectURL(file));\n    }\n  };\n\n  const formattedCategories = useMemo(() => {\n    return categories.map(({ name }) => ({\n      value: name,\n      label: name,\n    }));\n  }, [categories]);\n\n  const { title, about, category, cookingTime } = description;\n\n  return (\n    <Wrapper>\n      <FileWrapper $isEmpty={!imgUrl}>\n        <input\n          type=\"file\"\n          accept=\"image/*\"\n          hidden\n          onChange={handleFileChange}\n        />\n\n        {imgUrl ? (\n          <Preview src={imgUrl} alt=\"Preview\" />\n        ) : (\n          <svg width={64} height={64}>\n            <use href={Sprite + '#icon-add-foto'}></use>\n          </svg>\n        )}\n      </FileWrapper>\n\n      <div>\n        <Container>\n          <Label>\n            <Input\n              type=\"text\"\n              placeholder=\"Enter item title\"\n              value={title}\n              onChange={({ target }) =>\n                setFieldValue('description.title', target.value)\n              }\n            />\n          </Label>\n        </Container>\n        <Container>\n          <Label>\n            <Input\n              type=\"text\"\n              placeholder=\"Enter about recipe\"\n              value={about}\n              onChange={({ target }) =>\n                setFieldValue('description.about', target.value)\n              }\n            />\n          </Label>\n        </Container>\n\n        <Container>\n          <Row>\n            <Text>Category</Text>\n            <Select\n              options={formattedCategories}\n              currentOption={category}\n              onSelect={value => setFieldValue('description.category', value)}\n            />\n          </Row>\n        </Container>\n        <Container>\n          <Row>\n            <Text>Cooking time</Text>\n            <Select\n              options={periods}\n              currentOption={cookingTime}\n              onSelect={value =>\n                setFieldValue('description.cookingTime', value)\n              }\n            />\n          </Row>\n        </Container>\n      </div>\n    </Wrapper>\n  );\n}\n\nRecipeDescriptionFields.propTypes = {\n  description: PropTypes.object,\n  setFieldValue: PropTypes.func,\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.section`\n  margin-bottom: 68px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 100px;\n    display: grid;\n    grid-template-columns: 280px 1fr;\n    gap: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    grid-template-columns: 358px 1fr;\n    gap: 50px;\n  }\n`;\n\nexport const FileWrapper = styled.label`\n  margin: 0 32px 32px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 268px;\n\n  background-color: ${({ $isEmpty }) =>\n    $isEmpty ? 'var(--accent)' : 'transparent'};\n  border-radius: 8px;\n  cursor: pointer;\n\n  svg {\n    transition: transform var(--transition-time) var(--transition-function);\n  }\n\n  &:hover {\n    svg {\n      transform: scale(1.05);\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    margin: 0;\n  }\n\n  @media screen and (min-width: 1440px) {\n    height: 344px;\n  }\n`;\n\nexport const Preview = styled.img`\n  max-width: auto;\n  object-fit: cover;\n  height: 100%;\n  border-radius: 8px;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: flex-start;\n  height: 40px;\n\n  border-bottom: 1px solid var(--border-bottom-color);\n  transition: border-color var(--transition-time) var(--transition-function);\n\n  &:not(:last-child) {\n    margin-bottom: 24px;\n  }\n\n  &:hover,\n  &:focus-within {\n    border-color: var(--input-border-color-focus);\n  }\n\n  @media screen and (min-width: 768px) {\n    height: 43px;\n\n    &:not(:last-child) {\n      margin-bottom: 32px;\n    }\n  }\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: flex-start;\n  width: 100%;\n`;\n\nexport const Row = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex: 1;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n\n  color: var(--black);\n  font-family: inherit;\n  font-size: 14px;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  background-color: transparent;\n  border: none;\n  outline: none;\n\n  &::placeholder {\n    color: inherit;\n    opacity: 0.5;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nexport const Text = styled.span`\n  color: var(--black);\n  font-size: 14px;\n  letter-spacing: -0.28px;\n  opacity: 0.5;\n\n  cursor: default;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n","import styled from 'styled-components';\nimport SimpleBar from 'simplebar-react';\n\nexport const Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  border: none;\n  outline: none;\n  background-color: transparent;\n\n  svg {\n    margin-left: 8px;\n    stroke: var(--accent);\n  }\n`;\n\nexport const InputFiled = styled.input`\n  width: 100%;\n\n  color: var(--black);\n  font-family: inherit;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  letter-spacing: -0.28px;\n\n  background-color: transparent;\n  border: none;\n  outline: none;\n\n  &::placeholder {\n    color: inherit;\n    opacity: 0.5;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n  }\n`;\n\nexport const ListWrapper = styled.div`\n  position: absolute;\n  top: calc(100% + 4px);\n  right: 0;\n  z-index: 10;\n\n  display: ${({ $isOpen }) => ($isOpen ? 'block' : 'none')};\n\n  background-color: var(--white);\n  border-radius: 6px;\n  box-shadow: 0px 6.518518447875977px 7.8222222328186035px 0px\n    rgba(0, 0, 0, 0.03);\n\n  @media screen and (min-width: 768px) {\n    top: calc(100% + 10px);\n  }\n`;\n\nexport const List = styled.ul`\n  margin: 0;\n  padding: 4px 14px;\n  min-width: 100%;\n  width: max-content;\n`;\n\nexport const Option = styled.li`\n  padding: 4px 0;\n\n  color: var(--black);\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  letter-spacing: -0.24px;\n  opacity: 0.5;\n\n  &:hover {\n    color: var(--accent);\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n  }\n`;\n\nexport const ScrollBar = styled(SimpleBar)`\n  min-width: 100%;\n  width: max-content;\n  max-height: 144px;\n\n  .simplebar-scrollbar::before {\n    background-color: var(--scroll-bar-color);\n    width: 4px;\n  }\n  .simplebar-scrollbar.simplebar-visible::before {\n    opacity: 1;\n  }\n\n  @media screen and (min-width: 768px) {\n    max-height: 162px;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Wrapper,\n  Label,\n  InputFiled,\n  ListWrapper,\n  List,\n  Option,\n  ScrollBar,\n} from './SelectInput.styled';\nimport Sprite from 'assets/sprite.svg';\nimport 'simplebar-react/dist/simplebar.min.css';\n\nexport default function SelectInput({\n  options,\n  currentOption,\n  onSelect,\n  inputProps,\n}) {\n  const [isOpen, setIsOpen] = useState(false);\n\n  useEffect(() => {\n    if (!isOpen) {\n      return;\n    }\n\n    const handleNextClick = () => {\n      setIsOpen(false);\n      document.removeEventListener('click', handleNextClick);\n    };\n\n    setTimeout(() => {\n      document.addEventListener('click', handleNextClick);\n    }, 0);\n  }, [isOpen]);\n\n  const handleSelect = value => {\n    onSelect(value);\n  };\n\n  return (\n    <Wrapper>\n      <Label type=\"button\" onClick={() => setIsOpen(state => !state)}>\n        <InputFiled type=\"text\" {...inputProps} />\n        <svg width={20} height={20}>\n          <use href={Sprite + '#icon-down'}></use>\n        </svg>\n      </Label>\n\n      <ListWrapper $isOpen={isOpen}>\n        <ScrollBar>\n          <List>\n            {options.map(({ label, value }) => (\n              <Option key={value} onClick={() => handleSelect(value)}>\n                {label}\n              </Option>\n            ))}\n          </List>\n        </ScrollBar>\n      </ListWrapper>\n    </Wrapper>\n  );\n}\n\nSelectInput.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.object),\n  currentOption: PropTypes.string,\n  onSelect: PropTypes.func,\n};\n\nSelectInput.defaultProps = {\n  options: [],\n  currentOption: '',\n  onSelect: () => null,\n};\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  color: var(--pre-title-color);\n  font-size: 24px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 24px;\n  letter-spacing: -0.48px;\n`;\n","import { Title } from './SectionTitle.styled';\n\nexport default function SectionTitle({ children, ...otherProps }) {\n  return <Title {...otherProps}>{children}</Title>;\n}\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\n\nexport default function InputNumber({ onChange, ...otherProps }) {\n  const [value, setValue] = useState('');\n\n  const handleChange = ({ target }) => {\n    for (let i = 0; i < target.value.length; i++) {\n      const unicodeNumber = target.value[i].charCodeAt();\n      if (unicodeNumber < 48 || unicodeNumber > 57) return;\n    }\n\n    setValue(target.value);\n    onChange(target.value);\n  };\n\n  return (\n    <input type=\"text\" value={value} onChange={handleChange} {...otherProps} />\n  );\n}\n\nInputNumber.propTypes = {\n  onChange: PropTypes.func,\n};\n\nInputNumber.defaultProps = {\n  onChange: () => null,\n};\n","import styled from 'styled-components';\nimport InputNumber from 'components/InputNumber/InputNumber';\n\nexport const Section = styled.section`\n  margin-bottom: 44px;\n  max-width: 610px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 100px;\n  }\n`;\n\nexport const Row = styled.div`\n  margin-bottom: 24px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 32px;\n  }\n`;\n\nexport const Block = styled.div`\n  padding: 4px 14px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 14px;\n  width: 92px;\n  max-height: 32px;\n\n  border: 1px solid var(--button-border-color);\n  border-radius: 18px;\n\n  @media screen and (min-width: 768px) {\n    padding: 4px 15px;\n    width: 110px;\n  }\n`;\n\nexport const Controller = styled.button`\n  margin: 0;\n  display: flex;\n  align-items: center;\n\n  background-color: transparent;\n  border: none;\n  outline: none;\n\n  svg {\n    width: 14px;\n    height: 14px;\n\n    transition: stroke var(--transition-time) var(--transition-function);\n  }\n\n  &:hover,\n  &:focus {\n    svg {\n      stroke: ${({ $decrement }) =>\n        $decrement ? 'var(--accent)' : 'var(--hover-dark)'};\n    }\n  }\n`;\n\nexport const Value = styled.span`\n  color: var(--text-primary);\n  font-size: 14px;\n  font-style: normal;\n  line-height: 18px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: 24px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    font-size: 16px;\n    line-height: 24px;\n  }\n`;\n\nexport const Ingredients = styled.ul`\n  display: flex;\n  flex-direction: column;\n  row-gap: 18px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  gap: 14px;\n`;\n\nexport const InputWrapper = styled.div`\n  position: relative;\n\n  padding: 0 16px;\n  display: flex;\n  align-items: center;\n  height: 53px;\n  max-width: 194px;\n\n  background-color: var(--input-bg-color);\n  border-radius: 6px;\n\n  &:first-child {\n    flex: 1;\n  }\n\n  & > div {\n    position: static;\n    & > div {\n      width: 100%;\n    }\n  }\n\n  & ul {\n    padding-left: 46px;\n  }\n\n  @media screen and (min-width: 768px) {\n    max-width: 398px;\n    height: 59px;\n  }\n`;\n\nexport const NumericInput = styled(InputNumber)`\n  width: 30px;\n\n  color: var(--text-primary);\n  font-family: inherit;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  text-align: center;\n  background-color: transparent;\n  border: none;\n  outline: none;\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n  }\n`;\n\nexport const RemoveBtn = styled.button`\n  margin-left: auto;\n  display: inline-flex;\n\n  background-color: transparent;\n  border: none;\n  outline: none;\n  transition: color var(--transition-time) var(--transition-function);\n\n  &:hover,\n  &:focus {\n    color: var(--accent);\n  }\n\n  svg {\n    width: 18px;\n    height: 18px;\n    stroke: #333333;\n  }\n\n  @media screen and (min-width: 768px) {\n    svg {\n      width: 20px;\n      height: 20px;\n    }\n  }\n`;\n","import Select from 'components/Select/Select';\nimport SelectInput from 'components/SelectInput/SelectInput';\nimport SectionTitle from 'components/SectionTitle/SectionTitle';\nimport {\n  Section,\n  Row,\n  Block,\n  Controller,\n  Ingredients,\n  Item,\n  InputWrapper,\n  NumericInput,\n  RemoveBtn,\n  Value,\n} from './RecipeIngredientsFields.styled';\nimport Sprite from 'assets/sprite.svg';\nimport units from 'data/units.json';\n\nexport default function RecipeIngredientsFields() {\n  return (\n    <Section>\n      <Row>\n        <SectionTitle>Ingredients</SectionTitle>\n        <Block>\n          <Controller type=\"button\" $decrement>\n            <svg stroke=\"var(--button-border-color)\">\n              <use href={Sprite + '#icon-minus'}></use>\n            </svg>\n          </Controller>\n          <Value>0</Value>\n          <Controller type=\"button\">\n            <svg stroke=\"var(--accent)\">\n              <use href={Sprite + '#icon-plus'}></use>\n            </svg>\n          </Controller>\n        </Block>\n      </Row>\n\n      <Ingredients>\n        <Item>\n          <InputWrapper>\n            <SelectInput inputProps={{ placeholder: 'Enter ingredient' }} />\n          </InputWrapper>\n          <InputWrapper>\n            <NumericInput maxLength={3} />\n            <Select options={units} />\n          </InputWrapper>\n          <RemoveBtn type=\"button\">\n            <svg>\n              <use href={Sprite + '#icon-X'}></use>\n            </svg>\n          </RemoveBtn>\n        </Item>\n      </Ingredients>\n    </Section>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  margin-bottom: 18px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 32px;\n  }\n`;\n\nexport const TextArea = styled.textarea`\n  margin-top: 24px;\n  padding: 10px 16px;\n  width: 100%;\n  height: 154px;\n\n  color: var(--black);\n  font-family: inherit;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  letter-spacing: -0.28px;\n\n  background-color: var(--input-bg-color);\n  border-radius: 6px;\n\n  transition: all var(--transition-time) var(--transition-function);\n  border: none;\n  outline-color: transparent;\n  resize: none;\n  outline: 1px solid transparent;\n\n  &::placeholder {\n    color: inherit;\n    opacity: 0.5;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-top: 32px;\n    width: 505px;\n\n    font-size: 18px;\n  }\n\n  &:hover {\n    outline-color: var(--input-border-color-focus);\n  }\n\n  &:focus {\n    background-color: var(--white);\n    outline-color: var(--input-border-color-focus);\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport SectionTitle from 'components/SectionTitle/SectionTitle';\nimport { Section, TextArea } from './RecipePreparationFields.styled';\n\nexport default function RecipePreparationFields({\n  preparation,\n  setFieldValue,\n}) {\n  const handleChange = ({ target }) => {\n    const values = target.value.split('\\n');\n    const filteredValues = values.filter(\n      (el, index, arr) =>\n        el || index === arr.length - 1 || index === arr.length - 2\n    );\n    setFieldValue('preparation', filteredValues);\n  };\n\n  return (\n    <Section>\n      <SectionTitle>Recipe Preparation</SectionTitle>\n      <TextArea\n        placeholder=\"Enter recipe\"\n        value={preparation.join('\\n')}\n        onChange={handleChange}\n      ></TextArea>\n    </Section>\n  );\n}\n\nRecipePreparationFields.propTypes = {\n  preparation: PropTypes.arrayOf(PropTypes.string),\n  setFieldValue: PropTypes.func,\n};\n\nRecipePreparationFields.defaultProps = {\n  preparation: [],\n  setFieldValue: () => null,\n};\n","import styled from 'styled-components';\n\nexport const StyledButton = styled.button`\n  padding: 12px 48px;\n  display: inline-flex;\n  align-items: center;\n\n  color: var(--bg-color);\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  background-color: var(--dark-accent);\n  border: none;\n  border-radius: 24px 44px;\n  outline: none;\n\n  transition: background-color var(--transition-time) var(--transition-function);\n\n  &:hover,\n  &:focus {\n    background-color: var(--accent);\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 14px 64px;\n  }\n`;\n","import { StyledButton } from './Button.styled';\n\nexport default function Button({ children, ...otherProps }) {\n  return <StyledButton {...otherProps}>{children}</StyledButton>;\n}\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  margin-bottom: 72px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 100px;\n  }\n  @media screen and (min-width: 1440px) {\n    margin-bottom: 0;\n  }\n`;\n","import { useFormik } from 'formik';\n\nimport RecipeDescriptionFields from 'components/RecipeDescriptionFields/RecipeDescriptionFields';\nimport RecipeIngredientsFields from 'components/RecipeIngredientsFields/RecipeIngredientsFields';\nimport RecipePreparationFields from 'components/RecipePreparationFields/RecipePreparationFields';\nimport Button from 'components/Button/Button';\nimport { Form } from './AddRecipeForm.styled';\n\nexport default function AddRecipeForm() {\n  const formik = useFormik({\n    initialValues: {\n      description: {\n        title: '',\n        img: null,\n        about: '',\n        category: '',\n        cookingTime: 0,\n      },\n      ingredients: [{ title: '', unit: 'g', amount: 1 }],\n      preparation: [],\n    },\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    },\n  });\n\n  const {\n    handleSubmit,\n    setFieldValue,\n    values: { description, ingredients, preparation },\n  } = formik;\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <RecipeDescriptionFields\n        description={description}\n        setFieldValue={setFieldValue}\n      />\n      <RecipeIngredientsFields\n        ingredients={ingredients}\n        setFieldValue={setFieldValue}\n      />\n      <RecipePreparationFields\n        preparation={preparation}\n        setFieldValue={setFieldValue}\n      />\n      <Button type=\"submit\" onClick={handleSubmit}>\n        Add\n      </Button>\n    </Form>\n  );\n}\n","import styled from 'styled-components';\nimport SectionTitle from 'components/SectionTitle/SectionTitle';\n\nexport const Wrapper = styled.div`\n  display: none;\n\n  @media screen and (min-width: 1440px) {\n    margin-bottom: 100px;\n    display: block;\n  }\n`;\n\nexport const Title = styled(SectionTitle)`\n  margin-bottom: 40px;\n`;\n\nexport const Socials = styled.ul`\n  display: flex;\n  align-items: center;\n  column-gap: 20px;\n`;\n\nexport const Item = styled.li`\n  svg {\n    fill: var(--accent);\n    transition: fill var(--transition-time) var(--transition-function);\n  }\n\n  a:hover,\n  a:focus {\n    outline: none;\n\n    svg {\n      fill: var(--hover-dark);\n    }\n  }\n`;\n","import { Wrapper, Title, Socials, Item } from './FollowUs.styled';\nimport Sprite from 'assets/sprite.svg';\n\nexport default function FollowUs({ isFooter }) {\n  return (\n    <Wrapper>\n      {!isFooter && <Title>Follow us</Title>}\n      <Socials>\n        <Item>\n          <a\n            href=\"https://www.facebook.com/\"\n            rel=\"noopener noreferrer nofollow\"\n            target=\"_blank\"\n          >\n            <svg width={26} height={26}>\n              <use href={Sprite + '#icon-facebook'}></use>\n            </svg>\n          </a>\n        </Item>\n        <Item>\n          <a\n            href=\"https://www.youtube.com/\"\n            rel=\"noopener noreferrer nofollow\"\n            target=\"_blank\"\n          >\n            <svg width={28} height={22}>\n              <use href={Sprite + '#icon-youtube'}></use>\n            </svg>\n          </a>\n        </Item>\n        <Item>\n          <a\n            href=\"https://twitter.com/\"\n            rel=\"noopener noreferrer nofollow\"\n            target=\"_blank\"\n          >\n            <svg width={25} height={22}>\n              <use href={Sprite + '#icon-twitter'}></use>\n            </svg>\n          </a>\n        </Item>\n        <Item>\n          <a\n            href=\"https://www.instagram.com/\"\n            rel=\"noopener noreferrer nofollow\"\n            target=\"_blank\"\n          >\n            <svg width={24} height={24}>\n              <use href={Sprite + '#icon-instagram'}></use>\n            </svg>\n          </a>\n        </Item>\n      </Socials>\n    </Wrapper>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Section = styled.section``;\n\nexport const List = styled.ul`\n  margin: 32px 0 0;\n  display: flex;\n  flex-direction: column;\n  row-gap: 24px;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 40px;\n    flex-direction: row;\n    column-gap: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    flex-direction: column;\n  }\n`;\n\nexport const Item = styled.li`\n  padding-bottom: 13px;\n  display: flex;\n  column-gap: 12px;\n\n  border-bottom: 1px solid var(--line-color);\n  cursor: pointer;\n\n  @media screen and (min-width: 768px) {\n    flex: 1;\n  }\n`;\n\nexport const Image = styled.img`\n  min-width: 102px;\n  width: 102px;\n  height: 85px;\n\n  border-radius: 8px;\n`;\n\nexport const RecipeTitle = styled.h3`\n  margin-bottom: 3px;\n\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 20px;\n  letter-spacing: -0.24px;\n  color: var(--text-primary);\n`;\n\nexport const Description = styled.p`\n  color: var(--color-text-secondary);\n  text-overflow: ellipsis;\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 16px;\n  letter-spacing: -0.24px;\n\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  line-clamp: 2;\n\n  overflow: hidden;\n`;\n","import SectionTitle from 'components/SectionTitle/SectionTitle';\nimport {\n  Section,\n  List,\n  Item,\n  Image,\n  RecipeTitle,\n  Description,\n} from './PopularRecipe.styled';\nimport useWindowWidth from 'hooks/useWindowWidth';\n\nimport recipesData from 'data/recipes.json';\n\nexport default function PopularRecipe() {\n  const windowWidth = useWindowWidth();\n\n  const itemsCount = windowWidth >= 768 && windowWidth < 1440 ? 2 : 4;\n\n  return (\n    <Section>\n      <SectionTitle>Popular recipe</SectionTitle>\n      <List>\n        {recipesData\n          .slice(0, itemsCount)\n          .map(({ _id, title, description, preview }) => (\n            <Item\n              key={_id.$oid}\n              onClick={() => console.log('navigate to ' + _id.$oid)}\n            >\n              <Image src={preview} alt={title} width={102} height={85} />\n              <div>\n                <RecipeTitle>{title}</RecipeTitle>\n                <Description>{description}</Description>\n              </div>\n            </Item>\n          ))}\n      </List>\n    </Section>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  padding: 50px 0 100px;\n\n  @media screen and (min-width: 768px) {\n    padding: 72px 0 200px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding: 100px 0 200px;\n  }\n`;\n\nexport const Grid = styled.div`\n  padding-top: 72px;\n\n  @media screen and (min-width: 768px) {\n    padding-top: 100px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    display: grid;\n    grid-template-columns: 1fr 318px;\n    column-gap: 120px;\n  }\n`;\n","import MainTitle from 'components/MainTitle/MainTitle';\nimport AddRecipeForm from 'components/AddRecipeForm/AddRecipeForm';\nimport FollowUs from 'components/FollowUs/FollowUs';\nimport PopularRecipe from 'components/PopularRecipe/PopularRecipe';\nimport { Wrapper, Grid } from './AddRecipePage.styled.js';\n\nexport default function AddRecipePage() {\n  return (\n    <Wrapper>\n      <MainTitle>Add recipe</MainTitle>\n      <Grid>\n        <AddRecipeForm />\n        <div>\n          <FollowUs />\n          <PopularRecipe />\n        </div>\n      </Grid>\n    </Wrapper>\n  );\n}\n"],"names":["Title","styled","_templateObject","_taggedTemplateLiteral","MainTitle","_ref","children","otherProps","_objectWithoutProperties","_excluded","_jsx","_objectSpread","Wrapper","Button","_templateObject2","ButtonText","_templateObject3","ListWrapper","_templateObject4","$isOpen","List","_templateObject5","Option","_templateObject6","ScrollBar","SimpleBar","_templateObject7","Select","options","currentOption","onSelect","_useState","useState","_useState2","_slicedToArray","isOpen","setIsOpen","useEffect","handleNextClick","document","removeEventListener","setTimeout","addEventListener","_jsxs","type","onClick","state","width","height","href","Sprite","map","_ref2","label","value","handleSelect","defaultProps","FileWrapper","$isEmpty","Preview","Container","Label","Row","Input","Text","_templateObject8","periods","i","push","RecipeDescriptionFields","description","setFieldValue","categories","setCategories","_useState3","_useState4","imgUrl","setImgUrl","categoriesData","formattedCategories","useMemo","_ref3","name","title","about","category","cookingTime","accept","hidden","onChange","file","target","files","URL","createObjectURL","src","alt","placeholder","_ref4","_ref5","InputFiled","SelectInput","inputProps","SectionTitle","InputNumber","setValue","length","unicodeNumber","charCodeAt","Section","Block","Controller","$decrement","Value","Ingredients","Item","InputWrapper","NumericInput","_templateObject9","RemoveBtn","_templateObject10","RecipeIngredientsFields","stroke","maxLength","units","TextArea","RecipePreparationFields","preparation","join","filteredValues","split","filter","el","index","arr","StyledButton","Form","AddRecipeForm","formik","useFormik","initialValues","img","ingredients","unit","amount","onSubmit","values","alert","JSON","stringify","handleSubmit","_formik$values","Socials","FollowUs","isFooter","rel","Image","RecipeTitle","Description","PopularRecipe","windowWidth","useWindowWidth","itemsCount","recipesData","_id","preview","console","log","$oid","Grid","AddRecipePage"],"sourceRoot":""}